image: inetsix/docker-ansible:2.7

stages:
  - build
  - analysis.environment
  - analysis.ansible
  - test
  - diff
  - push
  - clean

#######################
# Template management #
#######################

.test_ansible_bootstrap: &test_ansible_bootstrap
  tags:
    - arista
    - emea
    - cvp
  before_script:
    - source .venv/bin/activate
    - chmod 755 tests
    - cd tests
    - sed -i -e "s/[0-9]\{1,3\}\.[0-9]\{1,3\}\.[0-9]\{1,3\}\.[0-9]\{1,3\}/$CVP_SERVER/g" inventory.ini
    - cat inventory.ini


#######################
# CI MANAGEMENT       #
#######################

ENVIRONMENT.BUILD:
  # Deploy all requirements for the pipeline.
  stage: build
  tags:
    - arista
    - emea
  script:
    - pip install virtualenv
    - virtualenv -p $(which python) .venv
    - source .venv/bin/activate
    - pip install -r requirements.txt
    - cp CVPRACv2/* .venv/lib/python2.7/site-packages/cvprac/
    - ls -a .venv/lib/python2.7/site-packages/cvprac/
  cache:
    key: "$CI_COMMIT_REF_NAME"
    paths:
      - .venv/

ENVIRONMENT.VERSION:
  # Test if we are using correct virtual environment
  stage: analysis.environment
  tags:
    - arista
    - emea
  script:
    - source .venv/bin/activate
    - ansible --version
    - python --version
  cache:
    key: "$CI_COMMIT_REF_NAME"
    paths:
      - .venv/

CVPRAC.ENHANCED:
  # Test if cvprac enhancements are correctly deployed.
  stage: analysis.ansible
  tags:
    - arista
    - emea
  script:
    - source .venv/bin/activate
    - sh .ci/check_cvprac.sh
  cache:
    key: "$CI_COMMIT_REF_NAME"
    paths:
      - .venv/

CVP_MODULE.DOCUMENTATION:
  # Allow to check if modules are seen by ansible
  stage: analysis.ansible
  <<: *test_ansible_bootstrap
  script:
    - ansible-doc -t module cv_device
    - ansible-doc -t module cv_container
    - ansible-doc -t module cv_configlet
    - ansible-doc -t module cv_image
  cache:
    key: "$CI_COMMIT_REF_NAME"
    paths:
      - .venv/


CVP_MODULE.CONTAINER:
  # Test cv_container module
  stage: test
  <<: *test_ansible_bootstrap
  script:
    - ansible-playbook playbook.container.demo.yaml -i inventory.ini --syntax-check
    - ansible-playbook playbook.container.demo.yaml -i inventory.ini
  cache:
    key: "$CI_COMMIT_REF_NAME"
    paths:
      - .venv/   

CVP_MODULE.CONFIGLET:
  # Test cv_container module
  stage: test
  <<: *test_ansible_bootstrap
  script:
    - ansible-playbook playbook.configlet.demo.yaml -i inventory.ini --syntax-check
    - ansible-playbook playbook.configlet.demo.yaml -i inventory.ini
  cache:
    key: "$CI_COMMIT_REF_NAME"
    paths:
      - .venv/ 

#######################
# ENV Cleanup         #
#######################

ENVIRONMENT.CLEAN:
  stage: clean
  tags:
    - arista
    - emea
  script:
    - rm -rf .venv/*
  cache:
    key: "$CI_COMMIT_REF_NAME"
    paths:
      - .venv/